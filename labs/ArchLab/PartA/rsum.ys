# NAME:    Huang
# WEBSITE: huangblog.com

# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp # set up stack pointer
	call main          # execute main program
	halt               # terminate program

# Sample linked list
.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

main:
	irmovq ele1, %rdi # set up argument
	call rsum_list
	ret

# list_ptr {long val, list_ptr next}
# long rsum_list(list_ptr ls)
# ls in %rdi
rsum_list:
    pushq %r8

do_staff:
    andq %rdi, %rdi # check if ls is null
    je null_end
    mrmovq (%rdi), %r8   # val = ls->val
    mrmovq 8(%rdi), %rdi # rsum_list(ls->next)
    call rsum_list
    addq %r8, %rax
    popq %r8
    ret

null_end:
    xorq %rax, %rax # return 0
    popq %r8
    ret

# Stack starts here and grows to lower adresses
	.pos 0x200
stack:
